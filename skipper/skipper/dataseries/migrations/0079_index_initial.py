# Generated by Django 3.2.7 on 2021-10-14 13:56

import uuid
from django.db import migrations, models
import django.db.models.deletion
import django_multitenant.mixins    # type: ignore
import skipper.core.models.fields
import skipper.core.models.softdelete
import skipper.core.models.validation
import skipper.dataseries.models.metamodel.django_base


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0026_alter_tenantpostgresqueuejob_args'),
        ('dataseries', '0078_alter_dataseries_consumer_external_id'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserDefinedIndex',
            fields=[
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('point_in_time', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('last_modified_at', models.DateTimeField(auto_now=True)),
                ('metamodel_version', models.IntegerField(default=4)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(default=None, max_length=256)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.tenant')),
            ],
            options={
                'db_table': '_3_user_defined_index',
            },
            bases=(django_multitenant.mixins.TenantModelMixin, models.Model),
            managers=[
                ('all_objects', skipper.core.models.softdelete.SoftDeletionTenantManager(alive_only=False)),
                ('objects', skipper.dataseries.models.metamodel.django_base.MetaModelSoftDeletionManager()),
            ],
        ),
        migrations.CreateModel(
            name='DataSeries_UserDefinedIndex',
            fields=[
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('point_in_time', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('last_modified_at', models.DateTimeField(auto_now=True)),
                ('metamodel_version', models.IntegerField(default=4)),
                ('external_id', models.CharField(max_length=256, validators=[skipper.core.models.validation.external_id_validator_sql_safe])),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('data_series', skipper.core.models.fields.FKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dataseries.dataseries')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.tenant')),
                ('user_defined_index', skipper.core.models.fields.UniqueFKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dataseries.userdefinedindex')),
            ],
            options={
                'db_table': '_3_data_series_user_defined_index',
                'default_permissions': [],
            },
            bases=(django_multitenant.mixins.TenantModelMixin, models.Model),
            managers=[
                ('all_objects', skipper.core.models.softdelete.SoftDeletionTenantManager(alive_only=False)),
                ('objects', skipper.dataseries.models.metamodel.django_base.MetaModelSoftDeletionManager()),
            ],
        ),
        migrations.AddConstraint(
            model_name='userdefinedindex',
            constraint=models.UniqueConstraint(fields=('tenant_id', 'id'), name='_3_user_defined_index_tenant_id_id_0'),
        ),
        migrations.AddConstraint(
            model_name='dataseries_userdefinedindex',
            constraint=models.UniqueConstraint(condition=models.Q(('deleted_at__isnull', True)), fields=('tenant_id', 'data_series', 'external_id'), name='_3_data_series_user_defined_index_external_id_1'),
        ),
        migrations.AddConstraint(
            model_name='dataseries_userdefinedindex',
            constraint=models.UniqueConstraint(condition=models.Q(('deleted_at__isnull', False)), fields=('tenant_id', 'data_series', 'external_id', 'deleted_at'), name='_3_data_series_user_defined_index_external_id_2'),
        ),
        migrations.AddConstraint(
            model_name='dataseries_userdefinedindex',
            constraint=models.UniqueConstraint(fields=('tenant_id', 'id'), name='_3_data_series_user_defined_index_tenant_id_id_0'),
        ),
    ]
