{
    "__inputs": [
      {
        "name": "DS_NFCOMPOSE-PG",
        "label": "nfcompose-pg",
        "description": "",
        "type": "datasource",
        "pluginId": "grafana-postgresql-datasource",
        "pluginName": "PostgreSQL"
      }
    ],
    "__elements": {},
    "__requires": [
      {
        "type": "panel",
        "id": "gauge",
        "name": "Gauge",
        "version": ""
      },
      {
        "type": "grafana",
        "id": "grafana",
        "name": "Grafana",
        "version": "10.2.3"
      },
      {
        "type": "datasource",
        "id": "grafana-postgresql-datasource",
        "name": "PostgreSQL",
        "version": "1.0.0"
      },
      {
        "type": "panel",
        "id": "timeseries",
        "name": "Time series",
        "version": ""
      }
    ],
    "annotations": {
      "list": [
        {
          "builtIn": 1,
          "datasource": {
            "type": "grafana",
            "uid": "-- Grafana --"
          },
          "enable": true,
          "hide": true,
          "iconColor": "rgba(0, 211, 255, 1)",
          "name": "Annotations & Alerts",
          "type": "dashboard"
        }
      ]
    },
    "editable": true,
    "fiscalYearStartMonth": 0,
    "graphTooltip": 0,
    "id": null,
    "links": [],
    "liveNow": false,
    "panels": [
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 0
        },
        "id": 7,
        "panels": [],
        "title": "General Information",
        "type": "row"
      },
      {
        "datasource": {
          "type": "grafana-postgresql-datasource",
          "uid": "${DS_NFCOMPOSE-PG}"
        },
        "fieldConfig": {
          "defaults": {
            "mappings": [],
            "thresholds": {
              "mode": "percentage",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "orange",
                  "value": 70
                },
                {
                  "color": "red",
                  "value": 85
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 5,
          "w": 3,
          "x": 0,
          "y": 1
        },
        "id": 4,
        "options": {
          "minVizHeight": 200,
          "minVizWidth": 200,
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showThresholdLabels": false,
          "showThresholdMarkers": false,
          "sizing": "auto"
        },
        "pluginVersion": "10.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-postgresql-datasource",
              "uid": "${DS_NFCOMPOSE-PG}"
            },
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "SELECT count(*)\nfrom _core_tenant ",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Tenants",
        "type": "gauge"
      },
      {
        "datasource": {
          "type": "grafana-postgresql-datasource",
          "uid": "${DS_NFCOMPOSE-PG}"
        },
        "fieldConfig": {
          "defaults": {
            "mappings": [],
            "thresholds": {
              "mode": "percentage",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "orange",
                  "value": 70
                },
                {
                  "color": "red",
                  "value": 85
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 5,
          "w": 3,
          "x": 3,
          "y": 1
        },
        "id": 8,
        "options": {
          "minVizHeight": 200,
          "minVizWidth": 200,
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [],
            "fields": "",
            "values": true
          },
          "showThresholdLabels": false,
          "showThresholdMarkers": false,
          "sizing": "auto"
        },
        "pluginVersion": "10.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-postgresql-datasource",
              "uid": "${DS_NFCOMPOSE-PG}"
            },
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "SELECT\n  tenant.name as tenant,\n  count(*)\nFROM _3_data_series dataseries\nJOIN _core_tenant tenant on dataseries.tenant_id = tenant.id\nWHERE dataseries.deleted_at IS NULL\nGROUP BY 1",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "DataSeries Count",
        "type": "gauge"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 6
        },
        "id": 6,
        "panels": [],
        "title": "Performance",
        "type": "row"
      },
      {
        "datasource": {
          "type": "grafana-postgresql-datasource",
          "uid": "${DS_NFCOMPOSE-PG}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "insertNulls": false,
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 0,
          "y": 7
        },
        "id": 1,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "grafana-postgresql-datasource",
              "uid": "${DS_NFCOMPOSE-PG}"
            },
            "editorMode": "code",
            "format": "time_series",
            "rawQuery": true,
            "rawSql": "SELECT\n  $__timeGroup(event.last_updated_at, '1m') AS time,\n  tenant.name as tenant,\n  dataseries.external_id as dataseries,\n  consumer.name as consumer,\n  count(*) AS event_count\nFROM _3_consumer_event event\nJOIN _3_consumer consumer on event.consumer_id = consumer.id\nJOIN _3_data_series_consumer dataseries_consumer on consumer.id = dataseries_consumer.consumer_id\nJOIN _3_data_series dataseries on dataseries_consumer.data_series_id = dataseries.id\nJOIN _core_tenant tenant on dataseries.tenant_id = tenant.id\nWHERE $__timeFilter(event.last_updated_at) AND event.state = 'SUCCESS'\nGROUP BY 1,2,3,4\nORDER BY 1,2,3,4",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Consumer Event Success Throughput per Minute",
        "type": "timeseries"
      },
      {
        "datasource": {
          "type": "grafana-postgresql-datasource",
          "uid": "${DS_NFCOMPOSE-PG}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "insertNulls": false,
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 12,
          "y": 7
        },
        "id": 10,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "grafana-postgresql-datasource",
              "uid": "${DS_NFCOMPOSE-PG}"
            },
            "editorMode": "code",
            "format": "time_series",
            "rawQuery": true,
            "rawSql": "SELECT\n  $__timeGroup(event.point_in_time, '1m') AS time,\n  tenant.name as tenant,\n  dataseries.external_id as dataseries,\n  consumer.name as consumer,\n  count(*) AS event_count\nFROM _3_consumer_event event\nJOIN _3_consumer consumer on event.consumer_id = consumer.id\nJOIN _3_data_series_consumer dataseries_consumer on consumer.id = dataseries_consumer.consumer_id\nJOIN _3_data_series dataseries on dataseries_consumer.data_series_id = dataseries.id\nJOIN _core_tenant tenant on dataseries.tenant_id = tenant.id\nWHERE $__timeFilter(event.point_in_time)\nGROUP BY 1,2,3,4\nORDER BY 1,2,3,4",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Consumer Events Creation per Minute",
        "type": "timeseries"
      },
      {
        "datasource": {
          "type": "grafana-postgresql-datasource",
          "uid": "${DS_NFCOMPOSE-PG}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "insertNulls": false,
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "normal"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "decimals": 0,
            "fieldMinMax": false,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 0,
          "y": 15
        },
        "id": 11,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "grafana-postgresql-datasource",
              "uid": "${DS_NFCOMPOSE-PG}"
            },
            "editorMode": "code",
            "format": "time_series",
            "rawQuery": true,
            "rawSql": "SELECT\n  $__timeGroup(lookup.point_in_time, '1m') AS time,\n  data_series.external_id AS data_series,\n  data_series_filefact.external_id as fact,\n  tenant.name as tenant,\n  count(*)\nFROM _3_file_lookup lookup\nJOIN _3_file_fact file_fact ON lookup.fact_id = file_fact.id\nJOIN _3_data_series_file_fact data_series_filefact ON file_fact.id = data_series_filefact.fact_id\nJOIN _3_data_series data_series ON data_series_filefact.data_series_id = data_series.id\nJOIN _core_tenant tenant ON data_series.tenant_id = tenant.id\nWHERE lookup.deleted_at IS NULL\nAND $__timeFilter(lookup.point_in_time)\nGROUP BY 1,2,3,4",
            "refId": "File Fact Files",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          {
            "datasource": {
              "type": "grafana-postgresql-datasource",
              "uid": "${DS_NFCOMPOSE-PG}"
            },
            "editorMode": "code",
            "format": "time_series",
            "hide": false,
            "rawQuery": true,
            "rawSql": "SELECT\n  $__timeGroup(lookup.point_in_time, '1m') AS time,\n  data_series.external_id AS data_series,\n  data_series_imagefact.external_id as fact,\n  tenant.name as tenant,\n  count(*)\nFROM _3_file_lookup lookup\nJOIN _3_image_fact image_fact ON lookup.fact_id = image_fact.id\nJOIN _3_data_series_image_fact data_series_imagefact ON image_fact.id = data_series_imagefact.fact_id\nJOIN _3_data_series data_series ON data_series_imagefact.data_series_id = data_series.id\nJOIN _core_tenant tenant ON data_series.tenant_id = tenant.id\nWHERE lookup.deleted_at IS NULL\nAND $__timeFilter(lookup.point_in_time)\nGROUP BY 1,2,3,4",
            "refId": "Image Fact Files",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Uploaded Files in the System per Minute",
        "type": "timeseries"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 23
        },
        "id": 5,
        "panels": [],
        "title": "Health",
        "type": "row"
      },
      {
        "datasource": {
          "type": "grafana-postgresql-datasource",
          "uid": "${DS_NFCOMPOSE-PG}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 5,
          "w": 24,
          "x": 0,
          "y": 24
        },
        "id": 3,
        "options": {
          "minVizHeight": 200,
          "minVizWidth": 200,
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showThresholdLabels": false,
          "showThresholdMarkers": true,
          "sizing": "auto"
        },
        "pluginVersion": "10.2.3",
        "targets": [
          {
            "datasource": {
              "type": "grafana-postgresql-datasource",
              "uid": "${DS_NFCOMPOSE-PG}"
            },
            "editorMode": "code",
            "format": "time_series",
            "rawQuery": true,
            "rawSql": "SELECT\n  $__timeGroup(last_check, '1m') AS time,\n  key,\n  count(health) as health\nFROM _5_healthcheck._5_subsystemhealth\nWHERE health = 'HEALTHY'\nGROUP BY 1,2\nORDER BY 1,2",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "subsystems health",
        "type": "gauge"
      },
      {
        "datasource": {
          "type": "grafana-postgresql-datasource",
          "uid": "${DS_NFCOMPOSE-PG}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "insertNulls": false,
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 0,
          "y": 29
        },
        "id": 2,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "grafana-postgresql-datasource",
              "uid": "${DS_NFCOMPOSE-PG}"
            },
            "editorMode": "code",
            "format": "time_series",
            "rawQuery": true,
            "rawSql": "SELECT\n  $__timeGroup(event.last_updated_at, '1m') AS time,\n  tenant.name as tenant,\n  dataseries.external_id as dataseries,\n  consumer.name as consumer,\n  count(*) AS event_count\nFROM _3_consumer_event event\nJOIN _3_consumer consumer on event.consumer_id = consumer.id\nJOIN _3_data_series_consumer dataseries_consumer on consumer.id = dataseries_consumer.consumer_id\nJOIN _3_data_series dataseries on dataseries_consumer.data_series_id = dataseries.id\nJOIN _core_tenant tenant on dataseries.tenant_id = tenant.id\nWHERE $__timeFilter(event.last_updated_at) AND (retries > 3 AND state = 'RETRY')\nGROUP BY 1,2,3,4\nORDER BY 1,2,3,4",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Failing Consumer Events",
        "type": "timeseries"
      },
      {
        "datasource": {
          "type": "grafana-postgresql-datasource",
          "uid": "${DS_NFCOMPOSE-PG}"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisBorderShow": false,
              "axisCenteredZero": false,
              "axisColorMode": "text",
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "insertNulls": false,
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 12,
          "y": 29
        },
        "id": 9,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom",
            "showLegend": true
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "grafana-postgresql-datasource",
              "uid": "${DS_NFCOMPOSE-PG}"
            },
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "SELECT\n  $__timeGroup(event.last_updated_at, '1m') AS time,\n  tenant.name as tenant,\n  dataseries.external_id as dataseries,\n  consumer.name as consumer,\n  count(*) AS event_count\nFROM _3_consumer_event event\nJOIN _3_consumer consumer on event.consumer_id = consumer.id\nJOIN _3_data_series_consumer dataseries_consumer on consumer.id = dataseries_consumer.consumer_id\nJOIN _3_data_series dataseries on dataseries_consumer.data_series_id = dataseries.id\nJOIN _core_tenant tenant on dataseries.tenant_id = tenant.id\nWHERE $__timeFilter(event.last_updated_at) AND state = 'NEW'\nGROUP BY 1,2,3,4\nORDER BY 1,2,3,4",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          }
        ],
        "title": "Consumer Events in State New",
        "type": "timeseries"
      }
    ],
    "refresh": "",
    "schemaVersion": 39,
    "tags": [],
    "templating": {
      "list": []
    },
    "time": {
      "from": "now-24h",
      "to": "now"
    },
    "timepicker": {},
    "timezone": "",
    "title": "NF Compose Dashboard",
    "uid": "ea13b7c7-f95c-4244-956c-3d8812117559",
    "version": 12,
    "weekStart": ""
  }